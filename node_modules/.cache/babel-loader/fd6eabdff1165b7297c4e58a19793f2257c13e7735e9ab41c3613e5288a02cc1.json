{"ast":null,"code":"var _jsxFileName = \"/Users/wasayr1/Downloads/wasay28-assignment-2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [points, setPoints] = useState([]);\n  const [clusters, setClusters] = useState([]);\n  const [centroids, setCentroids] = useState([]);\n  const [nClusters, setNClusters] = useState(3);\n  useEffect(() => {\n    generateRandomPoints();\n  }, []);\n  const generateRandomPoints = () => {\n    const newPoints = Array.from({\n      length: 200\n    }, () => [Math.random() * 800, Math.random() * 600]);\n    setPoints(newPoints);\n  };\n  const runKMeans = async () => {\n    const response = await fetch('http://127.0.0.1:5000/api/kmeans', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        points,\n        n_clusters: nClusters\n      })\n    });\n    const data = await response.json();\n    setClusters(data.clusters);\n    setCentroids(data.centroids);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"KMeans Clustering Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateRandomPoints,\n      children: \"Generate New Points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: nClusters,\n      onChange: e => setNClusters(Number(e.target.value)),\n      min: \"1\",\n      max: \"10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runKMeans,\n      children: \"Run KMeans\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"800\",\n      height: \"600\",\n      children: [points.map((point, i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: point[0],\n        cy: point[1],\n        r: \"3\",\n        fill: clusters[i] ? `hsl(${clusters[i] * 360 / nClusters}, 100%, 50%)` : 'black'\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)), centroids.map((centroid, i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: centroid[0],\n        cy: centroid[1],\n        r: \"5\",\n        fill: \"red\",\n        stroke: \"black\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TDLXIB1dYatx9n8NSENbyEntl9U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","d3","jsxDEV","_jsxDEV","App","_s","points","setPoints","clusters","setClusters","centroids","setCentroids","nClusters","setNClusters","generateRandomPoints","newPoints","Array","from","length","Math","random","runKMeans","response","fetch","method","headers","body","JSON","stringify","n_clusters","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","Number","target","min","max","width","height","map","point","i","cx","cy","r","fill","centroid","stroke","_c","$RefreshReg$"],"sources":["/Users/wasayr1/Downloads/wasay28-assignment-2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nfunction App() {\n  const [points, setPoints] = useState([]);\n  const [clusters, setClusters] = useState([]);\n  const [centroids, setCentroids] = useState([]);\n  const [nClusters, setNClusters] = useState(3);\n\n  useEffect(() => {\n    generateRandomPoints();\n  }, []);\n\n  const generateRandomPoints = () => {\n    const newPoints = Array.from({ length: 200 }, () => [\n      Math.random() * 800,\n      Math.random() * 600,\n    ]);\n    setPoints(newPoints);\n  };\n\n  const runKMeans = async () => {\n    const response = await fetch('http://127.0.0.1:5000/api/kmeans', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ points, n_clusters: nClusters }),\n    });\n    const data = await response.json();\n    setClusters(data.clusters);\n    setCentroids(data.centroids);\n  };\n\n  return (\n    <div>\n      <h1>KMeans Clustering Visualization</h1>\n      <button onClick={generateRandomPoints}>Generate New Points</button>\n      <input\n        type=\"number\"\n        value={nClusters}\n        onChange={(e) => setNClusters(Number(e.target.value))}\n        min=\"1\"\n        max=\"10\"\n      />\n      <button onClick={runKMeans}>Run KMeans</button>\n      <svg width=\"800\" height=\"600\">\n        {points.map((point, i) => (\n          <circle\n            key={i}\n            cx={point[0]}\n            cy={point[1]}\n            r=\"3\"\n            fill={clusters[i] ? `hsl(${(clusters[i] * 360) / nClusters}, 100%, 50%)` : 'black'}\n          />\n        ))}\n        {centroids.map((centroid, i) => (\n          <circle\n            key={i}\n            cx={centroid[0]}\n            cy={centroid[1]}\n            r=\"5\"\n            fill=\"red\"\n            stroke=\"black\"\n          />\n        ))}\n      </svg>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}