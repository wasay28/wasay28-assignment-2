{"ast":null,"code":"var _jsxFileName = \"/Users/wasayr1/Downloads/wasay28-assignment-2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [points, setPoints] = useState([]);\n  const [clusters, setClusters] = useState([]);\n  const [centroids, setCentroids] = useState([]);\n  const [nClusters, setNClusters] = useState(3);\n  const [initMethod, setInitMethod] = useState('random');\n  const [steps, setSteps] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [isManualSelection, setIsManualSelection] = useState(false);\n  const svgRef = useRef();\n  useEffect(() => {\n    generateRandomPoints();\n  }, []);\n  useEffect(() => {\n    drawVisualization();\n  }, [points, clusters, centroids, currentStep]);\n  const generateRandomPoints = () => {\n    const newPoints = Array.from({\n      length: 200\n    }, () => [Math.random() * 800, Math.random() * 600]);\n    setPoints(newPoints);\n    setClusters([]);\n    setCentroids([]);\n    setSteps([]);\n    setCurrentStep(0);\n  };\n  const runKMeans = async (toConvergence = false) => {\n    const response = await fetch('http://127.0.0.1:5000/api/kmeans', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        points,\n        n_clusters: nClusters,\n        init_method: initMethod,\n        manual_centroids: initMethod === 'manual' ? centroids : undefined\n      })\n    });\n    const data = await response.json();\n    setSteps(data.steps);\n    if (toConvergence) {\n      setClusters(data.final_clusters);\n      setCentroids(data.final_centroids);\n      setCurrentStep(data.steps.length - 1);\n    } else {\n      setCurrentStep(0);\n      updateStep(0);\n    }\n  };\n  const stepForward = () => {\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(currentStep + 1);\n      updateStep(currentStep + 1);\n    }\n  };\n  const updateStep = step => {\n    setClusters(steps[step].clusters);\n    setCentroids(steps[step].centroids);\n  };\n  const resetAlgorithm = () => {\n    setClusters([]);\n    setCentroids([]);\n    setSteps([]);\n    setCurrentStep(0);\n    setIsManualSelection(false);\n  };\n  const handleManualCentroidSelection = event => {\n    if (isManualSelection && centroids.length < nClusters) {\n      const svg = d3.select(svgRef.current);\n      const [x, y] = d3.pointer(event);\n      setCentroids(prev => [...prev, [x, y]]);\n    }\n  };\n  const drawVisualization = () => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    svg.selectAll(\"circle.point\").data(points).enter().append(\"circle\").attr(\"class\", \"point\").attr(\"cx\", d => d[0]).attr(\"cy\", d => d[1]).attr(\"r\", 3).attr(\"fill\", (d, i) => clusters[i] ? d3.schemeCategory10[clusters[i] % 10] : \"black\");\n    svg.selectAll(\"circle.centroid\").data(centroids).enter().append(\"circle\").attr(\"class\", \"centroid\").attr(\"cx\", d => d[0]).attr(\"cy\", d => d[1]).attr(\"r\", 5).attr(\"fill\", \"red\").attr(\"stroke\", \"black\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"KMeans Clustering Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: initMethod,\n      onChange: e => setInitMethod(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"random\",\n        children: \"Random\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"farthest_first\",\n        children: \"Farthest First\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"kmeans++\",\n        children: \"KMeans++\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"manual\",\n        children: \"Manual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: nClusters,\n      onChange: e => setNClusters(Number(e.target.value)),\n      min: \"1\",\n      max: \"10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateRandomPoints,\n      children: \"Generate New Points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => runKMeans(false),\n      children: \"Initialize KMeans\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stepForward,\n      disabled: currentStep === steps.length - 1,\n      children: \"Step Forward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => runKMeans(true),\n      children: \"Run to Convergence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetAlgorithm,\n      children: \"Reset Algorithm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), initMethod === 'manual' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsManualSelection(!isManualSelection),\n      children: isManualSelection ? 'Finish Selection' : 'Select Centroids'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: \"800\",\n      height: \"600\",\n      onClick: handleManualCentroidSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xFflVLawU1Hst6dQelGjXm7K07E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","jsxDEV","_jsxDEV","App","_s","points","setPoints","clusters","setClusters","centroids","setCentroids","nClusters","setNClusters","initMethod","setInitMethod","steps","setSteps","currentStep","setCurrentStep","isManualSelection","setIsManualSelection","svgRef","generateRandomPoints","drawVisualization","newPoints","Array","from","length","Math","random","runKMeans","toConvergence","response","fetch","method","headers","body","JSON","stringify","n_clusters","init_method","manual_centroids","undefined","data","json","final_clusters","final_centroids","updateStep","stepForward","step","resetAlgorithm","handleManualCentroidSelection","event","svg","select","current","x","y","pointer","prev","selectAll","remove","enter","append","attr","d","i","schemeCategory10","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","Number","min","max","onClick","disabled","ref","width","height","_c","$RefreshReg$"],"sources":["/Users/wasayr1/Downloads/wasay28-assignment-2/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nfunction App() {\n  const [points, setPoints] = useState([]);\n  const [clusters, setClusters] = useState([]);\n  const [centroids, setCentroids] = useState([]);\n  const [nClusters, setNClusters] = useState(3);\n  const [initMethod, setInitMethod] = useState('random');\n  const [steps, setSteps] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [isManualSelection, setIsManualSelection] = useState(false);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    generateRandomPoints();\n  }, []);\n\n  useEffect(() => {\n    drawVisualization();\n  }, [points, clusters, centroids, currentStep]);\n\n  const generateRandomPoints = () => {\n    const newPoints = Array.from({ length: 200 }, () => [\n      Math.random() * 800,\n      Math.random() * 600,\n    ]);\n    setPoints(newPoints);\n    setClusters([]);\n    setCentroids([]);\n    setSteps([]);\n    setCurrentStep(0);\n  };\n\n  const runKMeans = async (toConvergence = false) => {\n    const response = await fetch('http://127.0.0.1:5000/api/kmeans', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ \n        points, \n        n_clusters: nClusters, \n        init_method: initMethod,\n        manual_centroids: initMethod === 'manual' ? centroids : undefined\n      }),\n    });\n    const data = await response.json();\n    setSteps(data.steps);\n    if (toConvergence) {\n      setClusters(data.final_clusters);\n      setCentroids(data.final_centroids);\n      setCurrentStep(data.steps.length - 1);\n    } else {\n      setCurrentStep(0);\n      updateStep(0);\n    }\n  };\n\n  const stepForward = () => {\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(currentStep + 1);\n      updateStep(currentStep + 1);\n    }\n  };\n\n  const updateStep = (step) => {\n    setClusters(steps[step].clusters);\n    setCentroids(steps[step].centroids);\n  };\n\n  const resetAlgorithm = () => {\n    setClusters([]);\n    setCentroids([]);\n    setSteps([]);\n    setCurrentStep(0);\n    setIsManualSelection(false);\n  };\n\n  const handleManualCentroidSelection = (event) => {\n    if (isManualSelection && centroids.length < nClusters) {\n      const svg = d3.select(svgRef.current);\n      const [x, y] = d3.pointer(event);\n      setCentroids(prev => [...prev, [x, y]]);\n    }\n  };\n\n  const drawVisualization = () => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    svg.selectAll(\"circle.point\")\n      .data(points)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"point\")\n      .attr(\"cx\", d => d[0])\n      .attr(\"cy\", d => d[1])\n      .attr(\"r\", 3)\n      .attr(\"fill\", (d, i) => clusters[i] ? d3.schemeCategory10[clusters[i] % 10] : \"black\");\n\n    svg.selectAll(\"circle.centroid\")\n      .data(centroids)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"centroid\")\n      .attr(\"cx\", d => d[0])\n      .attr(\"cy\", d => d[1])\n      .attr(\"r\", 5)\n      .attr(\"fill\", \"red\")\n      .attr(\"stroke\", \"black\");\n  };\n\n  return (\n    <div>\n      <h1>KMeans Clustering Visualization</h1>\n      <select value={initMethod} onChange={(e) => setInitMethod(e.target.value)}>\n        <option value=\"random\">Random</option>\n        <option value=\"farthest_first\">Farthest First</option>\n        <option value=\"kmeans++\">KMeans++</option>\n        <option value=\"manual\">Manual</option>\n      </select>\n      <input\n        type=\"number\"\n        value={nClusters}\n        onChange={(e) => setNClusters(Number(e.target.value))}\n        min=\"1\"\n        max=\"10\"\n      />\n      <button onClick={generateRandomPoints}>Generate New Points</button>\n      <button onClick={() => runKMeans(false)}>Initialize KMeans</button>\n      <button onClick={stepForward} disabled={currentStep === steps.length - 1}>Step Forward</button>\n      <button onClick={() => runKMeans(true)}>Run to Convergence</button>\n      <button onClick={resetAlgorithm}>Reset Algorithm</button>\n      {initMethod === 'manual' && (\n        <button onClick={() => setIsManualSelection(!isManualSelection)}>\n          {isManualSelection ? 'Finish Selection' : 'Select Centroids'}\n        </button>\n      )}\n      <svg\n        ref={svgRef}\n        width=\"800\"\n        height=\"600\"\n        onClick={handleManualCentroidSelection}\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,QAAQ,CAAC;EACtD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACsB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAMwB,MAAM,GAAGtB,MAAM,CAAC,CAAC;EAEvBD,SAAS,CAAC,MAAM;IACdwB,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAENxB,SAAS,CAAC,MAAM;IACdyB,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAAClB,MAAM,EAAEE,QAAQ,EAAEE,SAAS,EAAEQ,WAAW,CAAC,CAAC;EAE9C,MAAMK,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAME,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAI,CAAC,EAAE,MAAM,CAClDC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EACnBD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CACpB,CAAC;IACFvB,SAAS,CAACkB,SAAS,CAAC;IACpBhB,WAAW,CAAC,EAAE,CAAC;IACfE,YAAY,CAAC,EAAE,CAAC;IAChBM,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAMY,SAAS,GAAG,MAAAA,CAAOC,aAAa,GAAG,KAAK,KAAK;IACjD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC/DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBjC,MAAM;QACNkC,UAAU,EAAE5B,SAAS;QACrB6B,WAAW,EAAE3B,UAAU;QACvB4B,gBAAgB,EAAE5B,UAAU,KAAK,QAAQ,GAAGJ,SAAS,GAAGiC;MAC1D,CAAC;IACH,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClC5B,QAAQ,CAAC2B,IAAI,CAAC5B,KAAK,CAAC;IACpB,IAAIgB,aAAa,EAAE;MACjBvB,WAAW,CAACmC,IAAI,CAACE,cAAc,CAAC;MAChCnC,YAAY,CAACiC,IAAI,CAACG,eAAe,CAAC;MAClC5B,cAAc,CAACyB,IAAI,CAAC5B,KAAK,CAACY,MAAM,GAAG,CAAC,CAAC;IACvC,CAAC,MAAM;MACLT,cAAc,CAAC,CAAC,CAAC;MACjB6B,UAAU,CAAC,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI/B,WAAW,GAAGF,KAAK,CAACY,MAAM,GAAG,CAAC,EAAE;MAClCT,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;MAC/B8B,UAAU,CAAC9B,WAAW,GAAG,CAAC,CAAC;IAC7B;EACF,CAAC;EAED,MAAM8B,UAAU,GAAIE,IAAI,IAAK;IAC3BzC,WAAW,CAACO,KAAK,CAACkC,IAAI,CAAC,CAAC1C,QAAQ,CAAC;IACjCG,YAAY,CAACK,KAAK,CAACkC,IAAI,CAAC,CAACxC,SAAS,CAAC;EACrC,CAAC;EAED,MAAMyC,cAAc,GAAGA,CAAA,KAAM;IAC3B1C,WAAW,CAAC,EAAE,CAAC;IACfE,YAAY,CAAC,EAAE,CAAC;IAChBM,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,CAAC,CAAC;IACjBE,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAM+B,6BAA6B,GAAIC,KAAK,IAAK;IAC/C,IAAIjC,iBAAiB,IAAIV,SAAS,CAACkB,MAAM,GAAGhB,SAAS,EAAE;MACrD,MAAM0C,GAAG,GAAGrD,EAAE,CAACsD,MAAM,CAACjC,MAAM,CAACkC,OAAO,CAAC;MACrC,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGzD,EAAE,CAAC0D,OAAO,CAACN,KAAK,CAAC;MAChC1C,YAAY,CAACiD,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE,CAACH,CAAC,EAAEC,CAAC,CAAC,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAMlC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAM8B,GAAG,GAAGrD,EAAE,CAACsD,MAAM,CAACjC,MAAM,CAACkC,OAAO,CAAC;IACrCF,GAAG,CAACO,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;IAE3BR,GAAG,CAACO,SAAS,CAAC,cAAc,CAAC,CAC1BjB,IAAI,CAACtC,MAAM,CAAC,CACZyD,KAAK,CAAC,CAAC,CACPC,MAAM,CAAC,QAAQ,CAAC,CAChBC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CACtBA,IAAI,CAAC,IAAI,EAAEC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CACrBD,IAAI,CAAC,IAAI,EAAEC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CACrBD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,MAAM,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK3D,QAAQ,CAAC2D,CAAC,CAAC,GAAGlE,EAAE,CAACmE,gBAAgB,CAAC5D,QAAQ,CAAC2D,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO,CAAC;IAExFb,GAAG,CAACO,SAAS,CAAC,iBAAiB,CAAC,CAC7BjB,IAAI,CAAClC,SAAS,CAAC,CACfqD,KAAK,CAAC,CAAC,CACPC,MAAM,CAAC,QAAQ,CAAC,CAChBC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CACzBA,IAAI,CAAC,IAAI,EAAEC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CACrBD,IAAI,CAAC,IAAI,EAAEC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CACrBD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CACnBA,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC;EAC5B,CAAC;EAED,oBACE9D,OAAA;IAAAkE,QAAA,gBACElE,OAAA;MAAAkE,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCtE,OAAA;MAAQuE,KAAK,EAAE5D,UAAW;MAAC6D,QAAQ,EAAGC,CAAC,IAAK7D,aAAa,CAAC6D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAL,QAAA,gBACxElE,OAAA;QAAQuE,KAAK,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCtE,OAAA;QAAQuE,KAAK,EAAC,gBAAgB;QAAAL,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtDtE,OAAA;QAAQuE,KAAK,EAAC,UAAU;QAAAL,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1CtE,OAAA;QAAQuE,KAAK,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACTtE,OAAA;MACE2E,IAAI,EAAC,QAAQ;MACbJ,KAAK,EAAE9D,SAAU;MACjB+D,QAAQ,EAAGC,CAAC,IAAK/D,YAAY,CAACkE,MAAM,CAACH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAE;MACtDM,GAAG,EAAC,GAAG;MACPC,GAAG,EAAC;IAAI;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFtE,OAAA;MAAQ+E,OAAO,EAAE3D,oBAAqB;MAAA8C,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnEtE,OAAA;MAAQ+E,OAAO,EAAEA,CAAA,KAAMnD,SAAS,CAAC,KAAK,CAAE;MAAAsC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnEtE,OAAA;MAAQ+E,OAAO,EAAEjC,WAAY;MAACkC,QAAQ,EAAEjE,WAAW,KAAKF,KAAK,CAACY,MAAM,GAAG,CAAE;MAAAyC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/FtE,OAAA;MAAQ+E,OAAO,EAAEA,CAAA,KAAMnD,SAAS,CAAC,IAAI,CAAE;MAAAsC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnEtE,OAAA;MAAQ+E,OAAO,EAAE/B,cAAe;MAAAkB,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxD3D,UAAU,KAAK,QAAQ,iBACtBX,OAAA;MAAQ+E,OAAO,EAAEA,CAAA,KAAM7D,oBAAoB,CAAC,CAACD,iBAAiB,CAAE;MAAAiD,QAAA,EAC7DjD,iBAAiB,GAAG,kBAAkB,GAAG;IAAkB;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CACT,eACDtE,OAAA;MACEiF,GAAG,EAAE9D,MAAO;MACZ+D,KAAK,EAAC,KAAK;MACXC,MAAM,EAAC,KAAK;MACZJ,OAAO,EAAE9B;IAA8B;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpE,EAAA,CAhJQD,GAAG;AAAAmF,EAAA,GAAHnF,GAAG;AAkJZ,eAAeA,GAAG;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}